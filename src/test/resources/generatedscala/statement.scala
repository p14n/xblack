// Generated by <a href="http://scalaxb.org/">scalaxb</a>.


trait BoS

object BoS {
  def fromString(value: String, scope: scala.xml.NamespaceBinding): BoS = value match {
    case "B" => B
    case "S" => S
    case "U" => U

  }
}

case object B extends BoS { override def toString = "B" }
case object S extends BoS { override def toString = "S" }
case object U extends BoS { override def toString = "U" }


case class StatementEntry(CAEventID: CAEventID,
  batchType: Option[String] = None,
  contractReference: Option[String] = None,
  ccurrency: Option[String] = None,
  dateEntered: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  settlementDate: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  description: Option[String] = None,
  runningBalance: Option[BigDecimal] = None,
  itemValue: Option[BigDecimal] = None,
  credit: Option[BigDecimal] = None,
  debit: Option[BigDecimal] = None,
  isaProduct: Option[String] = None,
  isaComponent: Option[String] = None,
  bos: Option[BoS] = None,
  symbol: Option[String] = None,
  cmarket: Option[String] = None,
  cprice: Option[BigDecimal] = None,
  qty: Option[String] = None,
  instrumentName: Option[String] = None)


case class Statement(StatementEntry: StatementEntry*)

