// Generated by <a href="http://scalaxb.org/">scalaxb</a>.


trait DeliveryStatus

object DeliveryStatus {
  def fromString(value: String, scope: scala.xml.NamespaceBinding): DeliveryStatus = value match {
    case "A" => A
    case "B" => BValue
    case "C" => CValue

  }
}

case object A extends DeliveryStatus { override def toString = "A" }
case object BValue extends DeliveryStatus { override def toString = "B" }
case object CValue extends DeliveryStatus { override def toString = "C" }

trait Trigger

object Trigger {
  def fromString(value: String, scope: scala.xml.NamespaceBinding): Trigger = value match {
    case "U" => UValue
    case "D" => D

  }
}

case object UValue extends Trigger { override def toString = "U" }
case object D extends Trigger { override def toString = "D" }

trait Type

object Type {
  def fromString(value: String, scope: scala.xml.NamespaceBinding): Type = value match {
    case "L" => L
    case "A" => AValue
    case "P" => PValue

  }
}

case object L extends Type { override def toString = "L" }
case object AValue extends Type { override def toString = "A" }
case object PValue extends Type { override def toString = "P" }


case class Alert(InstrumentHeading: InstrumentHeading,
  alertPrice: Price,
  originalPrice: Option[Price] = None,
  livePrice: Option[Price] = None,
  DeliveryType: DeliveryType,
  DeliveryStatus: DeliveryStatus,
  Trigger: Trigger,
  Type: Type,
  id: Option[Int] = None,
  upPrice: BigDecimal,
  downPrice: BigDecimal,
  ccurrency: Option[String] = None,
  dateCreated: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  dateChanged: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  dateTriggered: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  closeMidPrice: Option[BigDecimal] = None,
  priceDifference: Option[BigDecimal] = None,
  priceDifferencePercentage: Option[BigDecimal] = None,
  activated: Option[Boolean] = None,
  checkUniqueAlert: Option[Boolean] = None)


case class Alerts(Alert: Alert*)

